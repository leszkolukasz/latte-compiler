-----------------------------------------------------------------------------
Info file generated by Happy Version 2.0.2 from ParLatte.y
-----------------------------------------------------------------------------

state 77 contains 1 shift/reduce conflicts.
state 148 contains 1 shift/reduce conflicts.

rule 46 is unused
rule 47 is unused
rule 48 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> FnDef                                    (5)
	TopDef -> 'class' Ident '{' ListClassMember '}'    (6)
	TopDef -> 'class' Ident 'extends' Ident '{' ListClassMember '}'   (7)
	FnDef -> Type Ident '(' ListArg ')' Block          (8)
	Arg -> Type Ident                                  (9)
	ClassMember -> Type Ident ';'                      (10)
	ClassMember -> FnDef                               (11)
	ListTopDef -> TopDef                               (12)
	ListTopDef -> TopDef ListTopDef                    (13)
	ListArg ->                                         (14)
	ListArg -> Arg                                     (15)
	ListArg -> Arg ',' ListArg                         (16)
	ListClassMember ->                                 (17)
	ListClassMember -> ClassMember ListClassMember     (18)
	Block -> '{' ListStmt '}'                          (19)
	Stmt -> ';'                                        (20)
	Stmt -> Block                                      (21)
	Stmt -> Type ListItem ';'                          (22)
	Stmt -> Expr '=' Expr ';'                          (23)
	Stmt -> Expr '++' ';'                              (24)
	Stmt -> Expr '--' ';'                              (25)
	Stmt -> 'return' Expr ';'                          (26)
	Stmt -> 'return' ';'                               (27)
	Stmt -> 'if' '(' Expr ')' Stmt                     (28)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (29)
	Stmt -> 'while' '(' Expr ')' Stmt                  (30)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (31)
	Stmt -> Expr ';'                                   (32)
	Item -> Ident                                      (33)
	Item -> Ident '=' Expr                             (34)
	ListStmt ->                                        (35)
	ListStmt -> Stmt ListStmt                          (36)
	ListItem -> Item                                   (37)
	ListItem -> Item ',' ListItem                      (38)
	Type -> 'int'                                      (39)
	Type -> 'char'                                     (40)
	Type -> 'string'                                   (41)
	Type -> 'boolean'                                  (42)
	Type -> 'void'                                     (43)
	Type -> Type '[]'                                  (44)
	Type -> Ident                                      (45)
	ListType ->                                        (46)
	ListType -> Type                                   (47)
	ListType -> Type ',' ListType                      (48)
	Expr7 -> Ident                                     (49)
	Expr7 -> Integer                                   (50)
	Expr7 -> 'null'                                    (51)
	Expr7 -> 'true'                                    (52)
	Expr7 -> 'false'                                   (53)
	Expr7 -> String                                    (54)
	Expr7 -> 'cast<' Type '>' '(' Expr ')'             (55)
	Expr7 -> 'new' Type                                (56)
	Expr7 -> 'new' Type '[' Expr ']'                   (57)
	Expr7 -> '(' Expr ')'                              (58)
	Expr6 -> Expr6 '(' ListExpr ')'                    (59)
	Expr6 -> Expr6 '.' Ident                           (60)
	Expr6 -> Expr6 '[' Expr ']'                        (61)
	Expr6 -> Expr7                                     (62)
	Expr5 -> '-' Expr6                                 (63)
	Expr5 -> '!' Expr6                                 (64)
	Expr5 -> Expr6                                     (65)
	Expr4 -> Expr4 MulOp Expr5                         (66)
	Expr4 -> Expr5                                     (67)
	Expr3 -> Expr3 AddOp Expr4                         (68)
	Expr3 -> Expr4                                     (69)
	Expr2 -> Expr2 RelOp Expr3                         (70)
	Expr2 -> Expr3                                     (71)
	Expr1 -> Expr2 '&&' Expr1                          (72)
	Expr1 -> Expr2                                     (73)
	Expr -> Expr1 '||' Expr                            (74)
	Expr -> Expr1                                      (75)
	ListExpr ->                                        (76)
	ListExpr -> Expr                                   (77)
	ListExpr -> Expr ',' ListExpr                      (78)
	AddOp -> '+'                                       (79)
	AddOp -> '-'                                       (80)
	MulOp -> '*'                                       (81)
	MulOp -> '/'                                       (82)
	MulOp -> '%'                                       (83)
	RelOp -> '<'                                       (84)
	RelOp -> '<='                                      (85)
	RelOp -> '>'                                       (86)
	RelOp -> '>='                                      (87)
	RelOp -> '=='                                      (88)
	RelOp -> '!='                                      (89)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	':'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'[]'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'boolean'      { PT _ (TS _ 26) }
	'cast<'        { PT _ (TS _ 27) }
	'char'         { PT _ (TS _ 28) }
	'class'        { PT _ (TS _ 29) }
	'else'         { PT _ (TS _ 30) }
	'extends'      { PT _ (TS _ 31) }
	'false'        { PT _ (TS _ 32) }
	'for'          { PT _ (TS _ 33) }
	'if'           { PT _ (TS _ 34) }
	'int'          { PT _ (TS _ 35) }
	'new'          { PT _ (TS _ 36) }
	'null'         { PT _ (TS _ 37) }
	'return'       { PT _ (TS _ 38) }
	'string'       { PT _ (TS _ 39) }
	'true'         { PT _ (TS _ 40) }
	'void'         { PT _ (TS _ 41) }
	'while'        { PT _ (TS _ 42) }
	'{'            { PT _ (TS _ 43) }
	'||'           { PT _ (TS _ 44) }
	'}'            { PT _ (TS _ 45) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	FnDef           rule  8
	Arg             rule  9
	ClassMember     rules 10, 11
	ListTopDef      rules 12, 13
	ListArg         rules 14, 15, 16
	ListClassMember rules 17, 18
	Block           rule  19
	Stmt            rules 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
	Item            rules 33, 34
	ListStmt        rules 35, 36
	ListItem        rules 37, 38
	Type            rules 39, 40, 41, 42, 43, 44, 45
	ListType        rules 46, 47, 48
	Expr7           rules 49, 50, 51, 52, 53, 54, 55, 56, 57, 58
	Expr6           rules 59, 60, 61, 62
	Expr5           rules 63, 64, 65
	Expr4           rules 66, 67
	Expr3           rules 68, 69
	Expr2           rules 70, 71
	Expr1           rules 72, 73
	Expr            rules 74, 75
	ListExpr        rules 76, 77, 78
	AddOp           rules 79, 80
	MulOp           rules 81, 82, 83
	RelOp           rules 84, 85, 86, 87, 88, 89

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'class'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	FnDef          goto state 6
	ListTopDef     goto state 7
	Type           goto state 8

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	'++'           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'--'           reduce using rule 45
	'.'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'['            reduce using rule 45
	'[]'           reduce using rule 45
	']'            reduce using rule 45
	'||'           reduce using rule 45
	L_Ident        reduce using rule 45


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 12)
	ListTopDef -> TopDef . ListTopDef                   (rule 13)

	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'class'        shift, and enter state 11
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 12

	Ident          goto state 3
	TopDef         goto state 5
	FnDef          goto state 6
	ListTopDef     goto state 18
	Type           goto state 8

State 6

	TopDef -> FnDef .                                   (rule 5)

	'boolean'      reduce using rule 5
	'char'         reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 7

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 8

	FnDef -> Type . Ident '(' ListArg ')' Block         (rule 8)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 16

State 9

	Type -> 'boolean' .                                 (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	'++'           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'--'           reduce using rule 42
	'.'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42
	L_Ident        reduce using rule 42


State 10

	Type -> 'char' .                                    (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'++'           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'--'           reduce using rule 40
	'.'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	']'            reduce using rule 40
	'||'           reduce using rule 40
	L_Ident        reduce using rule 40


State 11

	TopDef -> 'class' . Ident '{' ListClassMember '}'    (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident '{' ListClassMember '}'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 15

State 12

	Type -> 'int' .                                     (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'++'           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'--'           reduce using rule 39
	'.'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'['            reduce using rule 39
	'[]'           reduce using rule 39
	']'            reduce using rule 39
	'||'           reduce using rule 39
	L_Ident        reduce using rule 39


State 13

	Type -> 'string' .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	'++'           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'--'           reduce using rule 41
	'.'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41
	L_Ident        reduce using rule 41


State 14

	Type -> 'void' .                                    (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	'++'           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'--'           reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43
	L_Ident        reduce using rule 43


State 15

	TopDef -> 'class' Ident . '{' ListClassMember '}'    (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident '{' ListClassMember '}'    (rule 7)

	'extends'      shift, and enter state 20
	'{'            shift, and enter state 21


State 16

	FnDef -> Type Ident . '(' ListArg ')' Block         (rule 8)

	'('            shift, and enter state 19


State 17

	Type -> Type '[]' .                                 (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	'++'           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'--'           reduce using rule 44
	'.'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44
	L_Ident        reduce using rule 44


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 13)

	%eof           reduce using rule 13


State 19

	FnDef -> Type Ident '(' . ListArg ')' Block         (rule 8)

	')'            reduce using rule 14
	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 27
	ListArg        goto state 28
	Type           goto state 29

State 20

	TopDef -> 'class' Ident 'extends' . Ident '{' ListClassMember '}'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 26

State 21

	TopDef -> 'class' Ident '{' . ListClassMember '}'    (rule 6)

	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	FnDef          goto state 22
	ClassMember    goto state 23
	ListClassMembergoto state 24
	Type           goto state 25

State 22

	ClassMember -> FnDef .                              (rule 11)

	'boolean'      reduce using rule 11
	'char'         reduce using rule 11
	'int'          reduce using rule 11
	'string'       reduce using rule 11
	'void'         reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11


State 23

	ListClassMember -> ClassMember . ListClassMember    (rule 18)

	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	FnDef          goto state 22
	ClassMember    goto state 23
	ListClassMembergoto state 36
	Type           goto state 25

State 24

	TopDef -> 'class' Ident '{' ListClassMember . '}'    (rule 6)

	'}'            shift, and enter state 35


State 25

	FnDef -> Type . Ident '(' ListArg ')' Block         (rule 8)
	ClassMember -> Type . Ident ';'                     (rule 10)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 34

State 26

	TopDef -> 'class' Ident 'extends' Ident . '{' ListClassMember '}'    (rule 7)

	'{'            shift, and enter state 33


State 27

	ListArg -> Arg .                                    (rule 15)
	ListArg -> Arg . ',' ListArg                        (rule 16)

	')'            reduce using rule 15
	','            shift, and enter state 32


State 28

	FnDef -> Type Ident '(' ListArg . ')' Block         (rule 8)

	')'            shift, and enter state 31


State 29

	Arg -> Type . Ident                                 (rule 9)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 30

State 30

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 31

	FnDef -> Type Ident '(' ListArg ')' . Block         (rule 8)

	'{'            shift, and enter state 41

	Block          goto state 40

State 32

	ListArg -> Arg ',' . ListArg                        (rule 16)

	')'            reduce using rule 14
	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 27
	ListArg        goto state 39
	Type           goto state 29

State 33

	TopDef -> 'class' Ident 'extends' Ident '{' . ListClassMember '}'    (rule 7)

	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	FnDef          goto state 22
	ClassMember    goto state 23
	ListClassMembergoto state 38
	Type           goto state 25

State 34

	FnDef -> Type Ident . '(' ListArg ')' Block         (rule 8)
	ClassMember -> Type Ident . ';'                     (rule 10)

	'('            shift, and enter state 19
	';'            shift, and enter state 37


State 35

	TopDef -> 'class' Ident '{' ListClassMember '}' .    (rule 6)

	'boolean'      reduce using rule 6
	'char'         reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 36

	ListClassMember -> ClassMember ListClassMember .    (rule 18)

	'}'            reduce using rule 18


State 37

	ClassMember -> Type Ident ';' .                     (rule 10)

	'boolean'      reduce using rule 10
	'char'         reduce using rule 10
	'int'          reduce using rule 10
	'string'       reduce using rule 10
	'void'         reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10


State 38

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassMember . '}'    (rule 7)

	'}'            shift, and enter state 72


State 39

	ListArg -> Arg ',' ListArg .                        (rule 16)

	')'            reduce using rule 16


State 40

	FnDef -> Type Ident '(' ListArg ')' Block .         (rule 8)

	'boolean'      reduce using rule 8
	'char'         reduce using rule 8
	'class'        reduce using rule 8
	'int'          reduce using rule 8
	'string'       reduce using rule 8
	'void'         reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	%eof           reduce using rule 8


State 41

	Block -> '{' . ListStmt '}'                         (rule 19)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 60
	'boolean'      shift, and enter state 9
	'cast<'        shift, and enter state 61
	'char'         shift, and enter state 10
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 12
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'string'       shift, and enter state 13
	'true'         shift, and enter state 68
	'void'         shift, and enter state 14
	'while'        shift, and enter state 69
	'{'            shift, and enter state 41
	'}'            reduce using rule 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 42
	Integer        goto state 43
	String         goto state 44
	Block          goto state 45
	Stmt           goto state 46
	ListStmt       goto state 47
	Type           goto state 48
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56

State 42

	Type -> Ident .                                     (rule 45)
	Expr7 -> Ident .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	'[]'           reduce using rule 45
	'||'           reduce using rule 49
	L_Ident        reduce using rule 45


State 43

	Expr7 -> Integer .                                  (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 44

	Expr7 -> String .                                   (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 45

	Stmt -> Block .                                     (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'cast<'        reduce using rule 21
	'char'         reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'null'         reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 46

	ListStmt -> Stmt . ListStmt                         (rule 36)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 60
	'boolean'      shift, and enter state 9
	'cast<'        shift, and enter state 61
	'char'         shift, and enter state 10
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 12
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'string'       shift, and enter state 13
	'true'         shift, and enter state 68
	'void'         shift, and enter state 14
	'while'        shift, and enter state 69
	'{'            shift, and enter state 41
	'}'            reduce using rule 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 42
	Integer        goto state 43
	String         goto state 44
	Block          goto state 45
	Stmt           goto state 46
	ListStmt       goto state 111
	Type           goto state 48
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56

State 47

	Block -> '{' ListStmt . '}'                         (rule 19)

	'}'            shift, and enter state 110


State 48

	Stmt -> Type . ListItem ';'                         (rule 22)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 107
	Item           goto state 108
	ListItem       goto state 109

State 49

	Expr6 -> Expr7 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'++'           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'.'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 50

	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 59)
	Expr6 -> Expr6 . '.' Ident                          (rule 60)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 61)
	Expr5 -> Expr6 .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	'('            shift, and enter state 104
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	'++'           reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'--'           reduce using rule 65
	'.'            shift, and enter state 105
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'['            shift, and enter state 106
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 51

	Expr4 -> Expr5 .                                    (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	'++'           reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'--'           reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 52

	Expr4 -> Expr4 . MulOp Expr5                        (rule 66)
	Expr3 -> Expr4 .                                    (rule 69)

	'!='           reduce using rule 69
	'%'            shift, and enter state 101
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 102
	'+'            reduce using rule 69
	'++'           reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'--'           reduce using rule 69
	'/'            shift, and enter state 103
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'='            reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69

	MulOp          goto state 100

State 53

	Expr3 -> Expr3 . AddOp Expr4                        (rule 68)
	Expr2 -> Expr3 .                                    (rule 71)

	'!='           reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'+'            shift, and enter state 98
	'++'           reduce using rule 71
	','            reduce using rule 71
	'-'            shift, and enter state 99
	'--'           reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'='            reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71

	AddOp          goto state 97

State 54

	Expr2 -> Expr2 . RelOp Expr3                        (rule 70)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 72)
	Expr1 -> Expr2 .                                    (rule 73)

	'!='           shift, and enter state 90
	'&&'           shift, and enter state 91
	')'            reduce using rule 73
	'++'           reduce using rule 73
	','            reduce using rule 73
	'--'           reduce using rule 73
	';'            reduce using rule 73
	'<'            shift, and enter state 92
	'<='           shift, and enter state 93
	'='            reduce using rule 73
	'=='           shift, and enter state 94
	'>'            shift, and enter state 95
	'>='           shift, and enter state 96
	']'            reduce using rule 73
	'||'           reduce using rule 73

	RelOp          goto state 89

State 55

	Expr -> Expr1 . '||' Expr                           (rule 74)
	Expr -> Expr1 .                                     (rule 75)

	')'            reduce using rule 75
	'++'           reduce using rule 75
	','            reduce using rule 75
	'--'           reduce using rule 75
	';'            reduce using rule 75
	'='            reduce using rule 75
	']'            reduce using rule 75
	'||'           shift, and enter state 88


State 56

	Stmt -> Expr . '=' Expr ';'                         (rule 23)
	Stmt -> Expr . '++' ';'                             (rule 24)
	Stmt -> Expr . '--' ';'                             (rule 25)
	Stmt -> Expr . ';'                                  (rule 32)

	'++'           shift, and enter state 84
	'--'           shift, and enter state 85
	';'            shift, and enter state 86
	'='            shift, and enter state 87


State 57

	Expr5 -> '!' . Expr6                                (rule 64)

	'('            shift, and enter state 58
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 83

State 58

	Expr7 -> '(' . Expr ')'                             (rule 58)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 82

State 59

	Expr5 -> '-' . Expr6                                (rule 63)

	'('            shift, and enter state 58
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 81

State 60

	Stmt -> ';' .                                       (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'cast<'        reduce using rule 20
	'char'         reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'null'         reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 61

	Expr7 -> 'cast<' . Type '>' '(' Expr ')'            (rule 55)

	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 80

State 62

	Expr7 -> 'false' .                                  (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 63

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 31)

	'('            shift, and enter state 79


State 64

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 28)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 29)

	'('            shift, and enter state 78


State 65

	Expr7 -> 'new' . Type                               (rule 56)
	Expr7 -> 'new' . Type '[' Expr ']'                  (rule 57)

	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 77

State 66

	Expr7 -> 'null' .                                   (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 67

	Stmt -> 'return' . Expr ';'                         (rule 26)
	Stmt -> 'return' . ';'                              (rule 27)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 76
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 75

State 68

	Expr7 -> 'true' .                                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 69

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 30)

	'('            shift, and enter state 73


State 70

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'--'           reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 71

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'--'           reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 72

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassMember '}' .    (rule 7)

	'boolean'      reduce using rule 7
	'char'         reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 73

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 30)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 133

State 74

	Expr7 -> Ident .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 75

	Stmt -> 'return' Expr . ';'                         (rule 26)

	';'            shift, and enter state 132


State 76

	Stmt -> 'return' ';' .                              (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'cast<'        reduce using rule 27
	'char'         reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'null'         reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 77

	Type -> Type . '[]'                                 (rule 44)
	Expr7 -> 'new' Type .                               (rule 56)
	Expr7 -> 'new' Type . '[' Expr ']'                  (rule 57)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            shift, and enter state 131
			(reduce using rule 56)

	'[]'           shift, and enter state 17
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 78

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 28)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 29)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 130

State 79

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 31)

	'boolean'      shift, and enter state 9
	'char'         shift, and enter state 10
	'int'          shift, and enter state 12
	'string'       shift, and enter state 13
	'void'         shift, and enter state 14
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 129

State 80

	Type -> Type . '[]'                                 (rule 44)
	Expr7 -> 'cast<' Type . '>' '(' Expr ')'            (rule 55)

	'>'            shift, and enter state 128
	'[]'           shift, and enter state 17


State 81

	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 59)
	Expr6 -> Expr6 . '.' Ident                          (rule 60)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 61)
	Expr5 -> '-' Expr6 .                                (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'('            shift, and enter state 104
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'++'           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'--'           reduce using rule 63
	'.'            shift, and enter state 105
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            shift, and enter state 106
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 82

	Expr7 -> '(' Expr . ')'                             (rule 58)

	')'            shift, and enter state 127


State 83

	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 59)
	Expr6 -> Expr6 . '.' Ident                          (rule 60)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 61)
	Expr5 -> '!' Expr6 .                                (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	'('            shift, and enter state 104
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	'++'           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'--'           reduce using rule 64
	'.'            shift, and enter state 105
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'['            shift, and enter state 106
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 84

	Stmt -> Expr '++' . ';'                             (rule 24)

	';'            shift, and enter state 126


State 85

	Stmt -> Expr '--' . ';'                             (rule 25)

	';'            shift, and enter state 125


State 86

	Stmt -> Expr ';' .                                  (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'cast<'        reduce using rule 32
	'char'         reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'null'         reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 87

	Stmt -> Expr '=' . Expr ';'                         (rule 23)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 124

State 88

	Expr -> Expr1 '||' . Expr                           (rule 74)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 123

State 89

	Expr2 -> Expr2 RelOp . Expr3                        (rule 70)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 122

State 90

	RelOp -> '!=' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'cast<'        reduce using rule 89
	'false'        reduce using rule 89
	'new'          reduce using rule 89
	'null'         reduce using rule 89
	'true'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 91

	Expr1 -> Expr2 '&&' . Expr1                         (rule 72)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 121

State 92

	RelOp -> '<' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'cast<'        reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'null'         reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 93

	RelOp -> '<=' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'cast<'        reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'null'         reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 94

	RelOp -> '==' .                                     (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'cast<'        reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'null'         reduce using rule 88
	'true'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 95

	RelOp -> '>' .                                      (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'cast<'        reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'null'         reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 96

	RelOp -> '>=' .                                     (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'cast<'        reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'null'         reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 97

	Expr3 -> Expr3 AddOp . Expr4                        (rule 68)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 120

State 98

	AddOp -> '+' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'cast<'        reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'null'         reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 99

	AddOp -> '-' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'cast<'        reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'null'         reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 100

	Expr4 -> Expr4 MulOp . Expr5                        (rule 66)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 119

State 101

	MulOp -> '%' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'cast<'        reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'null'         reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 102

	MulOp -> '*' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'cast<'        reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'null'         reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 103

	MulOp -> '/' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'cast<'        reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'null'         reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 104

	Expr6 -> Expr6 '(' . ListExpr ')'                   (rule 59)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	')'            reduce using rule 76
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 117
	ListExpr       goto state 118

State 105

	Expr6 -> Expr6 '.' . Ident                          (rule 60)

	L_Ident        shift, and enter state 2

	Ident          goto state 116

State 106

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 61)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 115

State 107

	Item -> Ident .                                     (rule 33)
	Item -> Ident . '=' Expr                            (rule 34)

	','            reduce using rule 33
	';'            reduce using rule 33
	'='            shift, and enter state 114


State 108

	ListItem -> Item .                                  (rule 37)
	ListItem -> Item . ',' ListItem                     (rule 38)

	','            shift, and enter state 113
	';'            reduce using rule 37


State 109

	Stmt -> Type ListItem . ';'                         (rule 22)

	';'            shift, and enter state 112


State 110

	Block -> '{' ListStmt '}' .                         (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'cast<'        reduce using rule 19
	'char'         reduce using rule 19
	'class'        reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'null'         reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 111

	ListStmt -> Stmt ListStmt .                         (rule 36)

	'}'            reduce using rule 36


State 112

	Stmt -> Type ListItem ';' .                         (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'cast<'        reduce using rule 22
	'char'         reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'null'         reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 113

	ListItem -> Item ',' . ListItem                     (rule 38)

	L_Ident        shift, and enter state 2

	Ident          goto state 107
	Item           goto state 108
	ListItem       goto state 144

State 114

	Item -> Ident '=' . Expr                            (rule 34)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 143

State 115

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 61)

	']'            shift, and enter state 142


State 116

	Expr6 -> Expr6 '.' Ident .                          (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	'++'           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'.'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 117

	ListExpr -> Expr .                                  (rule 77)
	ListExpr -> Expr . ',' ListExpr                     (rule 78)

	')'            reduce using rule 77
	','            shift, and enter state 141


State 118

	Expr6 -> Expr6 '(' ListExpr . ')'                   (rule 59)

	')'            shift, and enter state 140


State 119

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	'++'           reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'--'           reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 120

	Expr4 -> Expr4 . MulOp Expr5                        (rule 66)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 68)

	'!='           reduce using rule 68
	'%'            shift, and enter state 101
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 102
	'+'            reduce using rule 68
	'++'           reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'--'           reduce using rule 68
	'/'            shift, and enter state 103
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'='            reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68

	MulOp          goto state 100

State 121

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 72)

	')'            reduce using rule 72
	'++'           reduce using rule 72
	','            reduce using rule 72
	'--'           reduce using rule 72
	';'            reduce using rule 72
	'='            reduce using rule 72
	']'            reduce using rule 72
	'||'           reduce using rule 72


State 122

	Expr3 -> Expr3 . AddOp Expr4                        (rule 68)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 70)

	'!='           reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'+'            shift, and enter state 98
	'++'           reduce using rule 70
	','            reduce using rule 70
	'-'            shift, and enter state 99
	'--'           reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70

	AddOp          goto state 97

State 123

	Expr -> Expr1 '||' Expr .                           (rule 74)

	')'            reduce using rule 74
	'++'           reduce using rule 74
	','            reduce using rule 74
	'--'           reduce using rule 74
	';'            reduce using rule 74
	'='            reduce using rule 74
	']'            reduce using rule 74


State 124

	Stmt -> Expr '=' Expr . ';'                         (rule 23)

	';'            shift, and enter state 139


State 125

	Stmt -> Expr '--' ';' .                             (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'cast<'        reduce using rule 25
	'char'         reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'null'         reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 126

	Stmt -> Expr '++' ';' .                             (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'cast<'        reduce using rule 24
	'char'         reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'null'         reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 127

	Expr7 -> '(' Expr ')' .                             (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	'++'           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 128

	Expr7 -> 'cast<' Type '>' . '(' Expr ')'            (rule 55)

	'('            shift, and enter state 138


State 129

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 31)
	Type -> Type . '[]'                                 (rule 44)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 137

State 130

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 28)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 29)

	')'            shift, and enter state 136


State 131

	Expr7 -> 'new' Type '[' . Expr ']'                  (rule 57)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 135

State 132

	Stmt -> 'return' Expr ';' .                         (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'cast<'        reduce using rule 26
	'char'         reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'null'         reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 133

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 30)

	')'            shift, and enter state 134


State 134

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 30)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 60
	'boolean'      shift, and enter state 9
	'cast<'        shift, and enter state 61
	'char'         shift, and enter state 10
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 12
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'string'       shift, and enter state 13
	'true'         shift, and enter state 68
	'void'         shift, and enter state 14
	'while'        shift, and enter state 69
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 42
	Integer        goto state 43
	String         goto state 44
	Block          goto state 45
	Stmt           goto state 150
	Type           goto state 48
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56

State 135

	Expr7 -> 'new' Type '[' Expr . ']'                  (rule 57)

	']'            shift, and enter state 149


State 136

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 28)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 29)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 60
	'boolean'      shift, and enter state 9
	'cast<'        shift, and enter state 61
	'char'         shift, and enter state 10
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 12
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'string'       shift, and enter state 13
	'true'         shift, and enter state 68
	'void'         shift, and enter state 14
	'while'        shift, and enter state 69
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 42
	Integer        goto state 43
	String         goto state 44
	Block          goto state 45
	Stmt           goto state 148
	Type           goto state 48
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56

State 137

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 31)

	':'            shift, and enter state 147


State 138

	Expr7 -> 'cast<' Type '>' '(' . Expr ')'            (rule 55)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 146

State 139

	Stmt -> Expr '=' Expr ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'cast<'        reduce using rule 23
	'char'         reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'null'         reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 140

	Expr6 -> Expr6 '(' ListExpr ')' .                   (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'++'           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 141

	ListExpr -> Expr ',' . ListExpr                     (rule 78)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	')'            reduce using rule 76
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 117
	ListExpr       goto state 145

State 142

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'++'           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'.'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 143

	Item -> Ident '=' Expr .                            (rule 34)

	','            reduce using rule 34
	';'            reduce using rule 34


State 144

	ListItem -> Item ',' ListItem .                     (rule 38)

	';'            reduce using rule 38


State 145

	ListExpr -> Expr ',' ListExpr .                     (rule 78)

	')'            reduce using rule 78


State 146

	Expr7 -> 'cast<' Type '>' '(' Expr . ')'            (rule 55)

	')'            shift, and enter state 153


State 147

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 31)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	'cast<'        shift, and enter state 61
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'true'         shift, and enter state 68
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 74
	Integer        goto state 43
	String         goto state 44
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 152

State 148

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 28)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 29)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'cast<'        reduce using rule 28
	'char'         reduce using rule 28
	'else'         shift, and enter state 151
			(reduce using rule 28)

	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'null'         reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 149

	Expr7 -> 'new' Type '[' Expr ']' .                  (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 150

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'cast<'        reduce using rule 30
	'char'         reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'null'         reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 151

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 29)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 60
	'boolean'      shift, and enter state 9
	'cast<'        shift, and enter state 61
	'char'         shift, and enter state 10
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 12
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'string'       shift, and enter state 13
	'true'         shift, and enter state 68
	'void'         shift, and enter state 14
	'while'        shift, and enter state 69
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 42
	Integer        goto state 43
	String         goto state 44
	Block          goto state 45
	Stmt           goto state 155
	Type           goto state 48
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56

State 152

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 31)

	')'            shift, and enter state 154


State 153

	Expr7 -> 'cast<' Type '>' '(' Expr ')' .            (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 154

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 31)

	'!'            shift, and enter state 57
	'('            shift, and enter state 58
	'-'            shift, and enter state 59
	';'            shift, and enter state 60
	'boolean'      shift, and enter state 9
	'cast<'        shift, and enter state 61
	'char'         shift, and enter state 10
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 12
	'new'          shift, and enter state 65
	'null'         shift, and enter state 66
	'return'       shift, and enter state 67
	'string'       shift, and enter state 13
	'true'         shift, and enter state 68
	'void'         shift, and enter state 14
	'while'        shift, and enter state 69
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 42
	Integer        goto state 43
	String         goto state 44
	Block          goto state 45
	Stmt           goto state 156
	Type           goto state 48
	Expr7          goto state 49
	Expr6          goto state 50
	Expr5          goto state 51
	Expr4          goto state 52
	Expr3          goto state 53
	Expr2          goto state 54
	Expr1          goto state 55
	Expr           goto state 56

State 155

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'cast<'        reduce using rule 29
	'char'         reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'null'         reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 156

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'cast<'        reduce using rule 31
	'char'         reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'null'         reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 90
Number of terminals: 48
Number of non-terminals: 31
Number of states: 157
